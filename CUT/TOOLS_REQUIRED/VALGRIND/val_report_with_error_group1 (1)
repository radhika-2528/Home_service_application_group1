==1293238== Memcheck, a memory error detector
==1293238== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==1293238== Using Valgrind-3.16.1 and LibVEX; rerun with -h for copyright info
==1293238== Command: ./serviceapp
==1293238== 
==1293238== Syscall param write(buf) points to uninitialised byte(s)
==1293238==    at 0x49388F3: write (write.c:26)
==1293238==    by 0x48C9664: _IO_file_write@@GLIBC_2.2.5 (fileops.c:1181)
==1293238==    by 0x48C89D5: new_do_write (fileops.c:449)
==1293238==    by 0x48CA708: _IO_new_do_write (fileops.c:426)
==1293238==    by 0x48CA708: _IO_do_write@@GLIBC_2.2.5 (fileops.c:423)
==1293238==    by 0x48C9FEF: _IO_file_close_it@@GLIBC_2.2.5 (fileops.c:136)
==1293238==    by 0x48BD375: fclose@@GLIBC_2.2.5 (iofclose.c:53)
==1293238==    by 0x10B190: customer_list_to_file (in /home/batch94-user2/project/serviceapp)
==1293238==    by 0x1092F1: main (in /home/batch94-user2/project/serviceapp)
==1293238==  Address 0x4a273b8 is 8 bytes inside a block of size 4,096 alloc'd
==1293238==    at 0x483877F: malloc (vg_replace_malloc.c:307)
==1293238==    by 0x48BD13B: _IO_file_doallocate (filedoalloc.c:101)
==1293238==    by 0x48CBA4F: _IO_doallocbuf (genops.c:347)
==1293238==    by 0x48CBA4F: _IO_doallocbuf (genops.c:342)
==1293238==    by 0x48CABF7: _IO_file_overflow@@GLIBC_2.2.5 (fileops.c:745)
==1293238==    by 0x48C9CDD: _IO_new_file_xsputn (fileops.c:1244)
==1293238==    by 0x48C9CDD: _IO_file_xsputn@@GLIBC_2.2.5 (fileops.c:1197)
==1293238==    by 0x48BE5BC: fwrite (iofwrite.c:39)
==1293238==    by 0x10B15F: customer_list_to_file (in /home/batch94-user2/project/serviceapp)
==1293238==    by 0x1092F1: main (in /home/batch94-user2/project/serviceapp)
==1293238== 
==1293238== 
==1293238== HEAP SUMMARY:
==1293238==     in use at exit: 432 bytes in 1 blocks
==1293238==   total heap usage: 10 allocs, 9 frees, 16,656 bytes allocated
==1293238== 
==1293238== LEAK SUMMARY:
==1293238==    definitely lost: 0 bytes in 0 blocks
==1293238==    indirectly lost: 0 bytes in 0 blocks
==1293238==      possibly lost: 0 bytes in 0 blocks
==1293238==    still reachable: 432 bytes in 1 blocks
==1293238==         suppressed: 0 bytes in 0 blocks
==1293238== Rerun with --leak-check=full to see details of leaked memory
==1293238== 
==1293238== Use --track-origins=yes to see where uninitialised values come from
==1293238== For lists of detected and suppressed errors, rerun with: -s
==1293238== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
